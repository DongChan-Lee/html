<CSS 기초>
div 태그 : 무색무취의 태그 But 줄바꿈이 된다는 특징
span 태그 : 무색무취의 태그, 줄바꿈 X

* id와 class의 차이점
- id는 고유 식별자
- class는 grouping해주는 소규모 집단(더 포괄적)
--> 우선순위 : id > class > tag

<리팩토링>
- 공장으로 다시 보내서 개선한다는 뜻의 용어
- 코드의 비효율적인 부분을 효율적으로 바꾸고, 가독성을 높이고, 유지/보수하기 편리하게 만들고, 중복된 것 제거하는 방향으로 코드를 다시 개선하는 작업
- 틈틈이 리팩토링해야 좋은 프로그램을 만들 수 있다.
- "this" : 코드가 속해있는 "태그"(인덱스 태그; 자기 자신)를 가리키도록 약속되어 있는 키워드!!
	--> 따라서, 함수에 넣으면 적용되지 않음!!★★★
	--> 전역변수(웹 브라우저에서는 윈도우에 해당됨)가 되는 것!!!

- 코딩을 잘하는 법 : '중복'을 끝까지 쫓아가서 다 제거하세요!!
- 동일한 단어 선택 : Ctrl + d


<배열과 반복문 활용>
- 콘솔 창에서 console.log(); 를 활용하면 결과값을 볼 수 있음 (파이썬에서 print와 비슷한 기능)


<객체>
- 서로 연관된 변수와 서로 연관된 함수를 잘 정리정돈하기 위한 도구
- 복잡도를 낮추기 위한 도구
- 객체 안에 있는 함수를 "Method"라고 부름
- 객체에 소속된 변수(key 값)를 "Property"라고 부름
- 배열은 대괄호 [], 객체는 중괄호 {} 약속
- "함수 안에서" 함수가 소속되어 있는 "객체"를 가리키는 약속된 명령어 : "this"

<라이브러리와 프레임워크>
- jQuery 라이브러리
- CDN : Content Delivery Network
- Ctrl + / : 주석처리

[jQuery 사용]
- $('a') : 웹페이지에 있는 모든 a 태그를 jQuery로 제어하겠다는 의미

<UI vs API>
- UI : User Interface ; 사용자가 시스템을 제어하기 위해서 사용하는 조작장치
- API : Application Programming Interface ; 애플리케이션을 만들기 위해서 프로그래밍을 할 때 사용하는 조작장치

- document 객체 : 웹페이지에 어떤 태그를 추가하고 싶거나, 자식 태그를 추가하고 싶다면 --> 필요한 메서드가 포함되어 있을 것!
그래도 없다면, "DOM(Document Object Model)"으로 수색범위를 넓혀봐라!

- window 객체 : 웹페이지가 아니라 웹 브라우저 자체를 제어해야 한다면
- cookie : 웹페이지가 reload되어도 현 상태를 유지하고 싶다면 --> 사용자를 위한 개인화된 서비스를 제공할 수 있음
- offline web application : 인터넷이 끊겨도 동작하는 웹 페이지를 만들고 싶다면 
- webRTC : 화상통신 웹, 앱을 만들고 싶다면 
- speech로 시작하는 API : 사용자의 음성을 인식하고 음성으로 정보를 전달하고 싶다면 
- webGL : 3차원 그래픽으로 게임과 같은 것을 만들고 싶다면 
- webVR : 가상현실





